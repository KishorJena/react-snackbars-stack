{"version":3,"file":"react-snackbars-stack.cjs.production.min.js","sources":["../src/constants/constants.ts","../src/context/SnackbarContext.tsx","../src/event/eventEmitter.ts","../src/theme/theme.tsx","../src/snackbar/SnackbarProvider.tsx","../src/reducers/snackbarReducer.ts","../src/snackbar/enqueueSnackbar.ts","../src/hooks/useSnackbar.tsx"],"sourcesContent":["import { DirectionTypes, Severity } from '../types';\r\n\r\nexport const SnackbarDefaults = {\r\n  anchorOrigin: {\r\n    vertical: 'bottom',\r\n    horizontal: 'left',\r\n  },\r\n  maxSnackbars: 4,\r\n  theme: 'light',\r\n  transitionType: 'slide',\r\n} as const;\r\n\r\nexport const OPPOSITE_DIRECTIONS: Record<DirectionTypes, DirectionTypes> = {\r\n  left: 'right',\r\n  right: 'left',\r\n  up: 'down',\r\n  down: 'up',\r\n} as const;\r\n\r\nexport const DEFAULT_OPTIONS = {\r\n  severity: 'info' as Severity,\r\n  duration: 3000,\r\n  preventDuplicate: false,\r\n} as const;\r\n","import { createContext } from 'react';\r\nimport { SnackbarContextType } from '../types';\r\n\r\nexport const SnackbarContext = createContext<SnackbarContextType | undefined>(\r\n  undefined\r\n);\r\n","import { SnackbarPayload } from '../types';\r\n\r\nclass EventEmitter {\r\n  private listeners = new Set<(snackbar: SnackbarPayload) => void>();\r\n  private active = false;\r\n  private queue: SnackbarPayload[] = [];\r\n  private processing = false;\r\n  private activeMessages = new Set<string>();\r\n\r\n  async emit(snackbar: SnackbarPayload): Promise<void> {\r\n    if (!this.active) return;\r\n\r\n    if (\r\n      snackbar.preventDuplicate &&\r\n      this.activeMessages.has(snackbar.message)\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    this.queue.push(snackbar);\r\n    if (snackbar.preventDuplicate) {\r\n      this.activeMessages.add(snackbar.message);\r\n    }\r\n\r\n    if (!this.processing) {\r\n      this.processing = true;\r\n      while (this.queue.length > 0) {\r\n        const next = this.queue.shift();\r\n        if (next) {\r\n          this.listeners.forEach(listener => listener(next));\r\n          await new Promise(resolve => setTimeout(resolve, 100));\r\n        }\r\n      }\r\n      this.processing = false;\r\n    }\r\n  }\r\n\r\n  subscribe(listener: (snackbar: SnackbarPayload) => void): () => void {\r\n    this.listeners.add(listener);\r\n    return () => {\r\n      this.listeners.delete(listener);\r\n      this.queue = [];\r\n      this.activeMessages.clear();\r\n    };\r\n  }\r\n\r\n  setActive(value: boolean): void {\r\n    this.active = value;\r\n  }\r\n\r\n  // Add this to snackbarReducer.ts\r\n  removeFromActiveMessages(message: string): void {\r\n    this.activeMessages.delete(message);\r\n  }\r\n}\r\n\r\nexport const eventEmitter = new EventEmitter();\r\n","import { createTheme } from '@mui/material';\r\n\r\nexport const darkTheme = createTheme({\r\n  palette: {\r\n    mode: 'dark',\r\n  },\r\n});\r\n\r\nexport const lightTheme = createTheme({\r\n  palette: {\r\n    mode: 'light',\r\n  },\r\n});\r\n","import {\r\n  Alert,\r\n  Fade,\r\n  Grow,\r\n  Portal,\r\n  Slide,\r\n  ThemeProvider,\r\n  Zoom,\r\n} from '@mui/material';\r\nimport Snackbar from '@mui/material/Snackbar';\r\nimport { TransitionProps } from '@mui/material/transitions';\r\nimport React, {\r\n  memo,\r\n  useCallback,\r\n  useEffect,\r\n  useMemo,\r\n  useReducer,\r\n  useRef,\r\n} from 'react';\r\nimport { DEFAULT_OPTIONS, SnackbarDefaults } from '../constants';\r\nimport { SnackbarContext } from '../context';\r\nimport { eventEmitter } from '../event';\r\nimport { snackbarReducer } from '../reducers';\r\nimport { darkTheme, lightTheme } from '../theme';\r\nimport {\r\n  AnchorOrigin,\r\n  DirectionTypes,\r\n  EnqueueSnackbar,\r\n  SnackbarAction,\r\n  SnackbarPayload,\r\n  SnackbarProviderProps,\r\n  TransitionType,\r\n} from '../types';\r\n\r\nconst oppositeDirections: { [key in DirectionTypes]: DirectionTypes } = {\r\n  left: 'right',\r\n  right: 'left',\r\n  up: 'down',\r\n  down: 'up',\r\n};\r\n\r\nconst SNACKBAR_SPACING = 60;\r\n\r\nconst transitionComponents = (\r\n  transitionType: TransitionType,\r\n  anchorOrigin: AnchorOrigin\r\n): React.ComponentType<any> => {\r\n  switch (transitionType) {\r\n    case 'slide':\r\n      return (props: TransitionProps & { children: React.ReactElement }) => (\r\n        <Slide\r\n          {...props}\r\n          direction={oppositeDirections[anchorOrigin.horizontal]}\r\n        />\r\n      );\r\n    case 'grow':\r\n      return Grow;\r\n    case 'fade':\r\n      return Fade;\r\n    case 'zoom':\r\n      return Zoom;\r\n    default:\r\n      return Slide;\r\n  }\r\n};\r\n\r\n// Main component\r\nconst Provider: React.FC<SnackbarProviderProps> = ({\r\n  anchorOrigin = SnackbarDefaults.anchorOrigin,\r\n  maxSnackbars = SnackbarDefaults.maxSnackbars,\r\n  theme = SnackbarDefaults.theme,\r\n  transitionType = SnackbarDefaults.transitionType,\r\n  icon,\r\n  children,\r\n}) => {\r\n  const [snackbars, dispatch] = useReducer(\r\n    (state: SnackbarPayload[], action: SnackbarAction) =>\r\n      snackbarReducer(state, action, maxSnackbars),\r\n    []\r\n  );\r\n\r\n  const instanceId = useRef(Date.now());\r\n\r\n  useEffect(() => {\r\n    // Check for multiple instances\r\n    const providers = document.querySelectorAll('[data-snackbar-provider]');\r\n    if (providers.length > 1) {\r\n      console.warn('Multiple SnackbarProvider instances detected!');\r\n    }\r\n\r\n    // Setup event listener\r\n    eventEmitter.setActive(true);\r\n    const unsubscribe = eventEmitter.subscribe(newSnackbar => {\r\n      dispatch({ type: 'ADD_SNACKBAR', payload: newSnackbar });\r\n    });\r\n\r\n    return () => {\r\n      eventEmitter.setActive(false);\r\n      unsubscribe();\r\n      dispatch({ type: 'CLEAR_ALL' });\r\n    };\r\n  }, []);\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const handleClose = useCallback(\r\n    (id: number) => (\r\n      _event?: React.SyntheticEvent | Event,\r\n      reason?: string\r\n    ) => {\r\n      if (reason === 'clickaway') return;\r\n\r\n      dispatch({ type: 'CLOSE_SNACKBAR', payload: id });\r\n\r\n      setTimeout(() => {\r\n        dispatch({ type: 'REMOVE_SNACKBAR', payload: id });\r\n      }, 150);\r\n    },\r\n    []\r\n  );\r\n\r\n  const SnakbarTransition = useMemo(\r\n    () => transitionComponents(transitionType, anchorOrigin),\r\n    [transitionType, anchorOrigin]\r\n  );\r\n\r\n  // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  const enqueueSnackbar: EnqueueSnackbar = useCallback(\r\n    (message, options = DEFAULT_OPTIONS) => {\r\n      const id = Date.now();\r\n      const payload: SnackbarPayload = {\r\n        id: id,\r\n        open: true,\r\n        message,\r\n        severity: options.severity,\r\n        duration: options.duration,\r\n        preventDuplicate: options.preventDuplicate,\r\n      };\r\n\r\n      if (maxSnackbars === snackbars.length) {\r\n        handleClose(snackbars[0].id)();\r\n      }\r\n\r\n      dispatch({ type: 'ADD_SNACKBAR', payload });\r\n    },\r\n    [maxSnackbars, snackbars, handleClose]\r\n  );\r\n\r\n  return (\r\n    <SnackbarContext.Provider value={{ enqueueSnackbar }}>\r\n      <ThemeProvider theme={theme === 'dark' ? darkTheme : lightTheme}>\r\n        <Portal>\r\n          <div\r\n            data-snackbar-provider={instanceId.current}\r\n            style={{\r\n              position: 'fixed',\r\n              [anchorOrigin.vertical]: 0,\r\n              [anchorOrigin.horizontal]: 0,\r\n              zIndex: 9999,\r\n              pointerEvents: 'none',\r\n            }}\r\n          >\r\n            {snackbars.map((snackbar, index) => (\r\n              <Snackbar\r\n                key={snackbar.id}\r\n                open={snackbar.open}\r\n                TransitionComponent={SnakbarTransition}\r\n                autoHideDuration={snackbar.duration}\r\n                onClose={handleClose(snackbar.id)}\r\n                anchorOrigin={anchorOrigin}\r\n                sx={{\r\n                  '& .MuiSnackbar-root': {\r\n                    position: 'static',\r\n                  },\r\n                  pointerEvents: 'auto',\r\n                  transition: 'all 0.1s ease-in-out',\r\n                  [anchorOrigin.vertical]: `${index * SNACKBAR_SPACING +\r\n                    24}px !important`,\r\n                }}\r\n              >\r\n                <Alert\r\n                  variant=\"filled\"\r\n                  onClose={handleClose(snackbar.id)}\r\n                  severity={snackbar.severity}\r\n                  sx={{\r\n                    width: '100%',\r\n                  }}\r\n                  icon={icon === true ? undefined : icon}\r\n                >\r\n                  {snackbar.message}\r\n                </Alert>\r\n              </Snackbar>\r\n            ))}\r\n          </div>\r\n        </Portal>\r\n      </ThemeProvider>\r\n\r\n      {children}\r\n    </SnackbarContext.Provider>\r\n  );\r\n};\r\n\r\nexport const SnackbarProvider: React.FC<SnackbarProviderProps> = memo(Provider);\r\n","import { SnackbarAction, SnackbarPayload } from '../types';\r\nimport { eventEmitter } from '../event';\r\n\r\nexport const snackbarReducer = (\r\n  state: SnackbarPayload[],\r\n  action: SnackbarAction,\r\n  maxSnackbars: number\r\n): SnackbarPayload[] => {\r\n  switch (action.type) {\r\n    case 'ADD_SNACKBAR':\r\n      return [...state, action.payload].slice(-maxSnackbars);\r\n    // return [...state, action.payload];\r\n    case 'CLOSE_SNACKBAR':\r\n      return state.map(snackbar => {\r\n        if (snackbar.id === action.payload) {\r\n          eventEmitter.removeFromActiveMessages(snackbar.message);\r\n          return { ...snackbar, open: false };\r\n        }\r\n        return snackbar;\r\n      });\r\n    case 'REMOVE_SNACKBAR':\r\n      return state.filter(snackbar => snackbar.id !== action.payload);\r\n    case 'CLEAR_ALL':\r\n      state.forEach(snackbar => {\r\n        eventEmitter.removeFromActiveMessages(snackbar.message);\r\n      });\r\n      return [];\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { DEFAULT_OPTIONS } from '../constants';\r\nimport { eventEmitter } from '../event';\r\nimport { EnqueueSnackbar, SnackbarPayload } from '../types';\r\n\r\n// Helper function to enqueue snackbars\r\nexport const enqueueSnackbar: EnqueueSnackbar = (\r\n  message,\r\n  options = DEFAULT_OPTIONS\r\n) => {\r\n  const snackbarEventEmit: SnackbarPayload = {\r\n    id: Date.now(),\r\n    open: true,\r\n    message,\r\n    severity: options.severity,\r\n    duration: options.duration,\r\n    preventDuplicate: options.preventDuplicate,\r\n  };\r\n\r\n  eventEmitter.emit(snackbarEventEmit);\r\n};\r\n","import { useContext } from 'react';\r\nimport { SnackbarContext } from '../context/SnackbarContext';\r\n\r\nexport const useSnackbar = () => {\r\n  const context = useContext(SnackbarContext);\r\n  if (!context) {\r\n    throw new Error('useSnackbar must be used within a SnackbarProvider');\r\n  }\r\n  return context;\r\n};\r\n"],"names":["SnackbarDefaults","anchorOrigin","vertical","horizontal","maxSnackbars","theme","transitionType","DEFAULT_OPTIONS","severity","duration","preventDuplicate","SnackbarContext","createContext","undefined","eventEmitter","EventEmitter","this","Set","_proto","prototype","emit","_emit","_asyncToGenerator","_regeneratorRuntime","mark","_callee","snackbar","_loop","_this","wrap","_context2","prev","next","active","abrupt","activeMessages","has","message","queue","push","add","processing","_context","shift","listeners","forEach","listener","Promise","resolve","setTimeout","stop","length","delegateYield","_x","apply","arguments","subscribe","_this2","clear","setActive","value","removeFromActiveMessages","darkTheme","createTheme","palette","mode","lightTheme","oppositeDirections","left","right","up","down","Provider","_ref","_ref$anchorOrigin","_ref$maxSnackbars","_ref$theme","_ref$transitionType","icon","children","_useReducer","useReducer","state","action","type","concat","payload","slice","map","id","_extends","open","filter","snackbarReducer","snackbars","dispatch","instanceId","useRef","Date","now","useEffect","document","querySelectorAll","console","warn","unsubscribe","newSnackbar","handleClose","useCallback","_event","reason","SnakbarTransition","useMemo","props","React","Slide","direction","Grow","Fade","Zoom","transitionComponents","enqueueSnackbar","options","ThemeProvider","Portal","current","style","_style","position","zIndex","pointerEvents","index","_sx","Snackbar","key","TransitionComponent","autoHideDuration","onClose","sx","& .MuiSnackbar-root","transition","Alert","variant","width","SnackbarProvider","memo","snackbarEventEmit","context","useContext","Error"],"mappings":"0OAEaA,EAAmB,CAC9BC,aAAc,CACZC,SAAU,SACVC,WAAY,QAEdC,aAAc,EACdC,MAAO,QACPC,eAAgB,SAULC,EAAkB,CAC7BC,SAAU,OACVC,SAAU,IACVC,kBAAkB,GCnBPC,EAAkBC,qBAC7BC,03NCoDWC,EAAe,eAtD5B,SAAAC,IACUC,eAAY,IAAIC,IAChBD,aAAS,EACTA,WAA2B,GAC3BA,iBAAa,EACbA,oBAAiB,IAAIC,IA+C9B,IAAAC,EAAAH,EAAAI,UADE,OACFD,EA7COE,gBAAI,IAAAC,EAAAC,EAAAC,IAAAC,MAAV,SAAAC,EAAWC,GAAyB,IAAAC,EAAAC,OAAA,OAAAL,IAAAM,eAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAAA,GAC7BhB,KAAKiB,QAAMH,EAAAE,OAAA,MAAA,OAAAF,EAAAI,iBAAA,OAAA,IAGdR,EAAShB,mBACTM,KAAKmB,eAAeC,IAAIV,EAASW,UAAQP,EAAAE,OAAA,MAAA,OAAAF,EAAAI,iBAAA,OAQ1C,GAHDlB,KAAKsB,MAAMC,KAAKb,GACZA,EAAShB,kBACXM,KAAKmB,eAAeK,IAAId,EAASW,SAG9BrB,KAAKyB,YAAUX,EAAAE,QAAA,MAClBhB,KAAKyB,YAAa,EAAKd,EAAAJ,IAAAC,eAAAG,IAAA,IAAAK,EAAA,OAAAT,IAAAM,eAAAa,GAAA,cAAAA,EAAAX,KAAAW,EAAAV,MAAA,OAEU,KAAzBA,EAAOJ,EAAKU,MAAMK,UAChBD,EAAAV,OAAA,MAC6C,OAAnDJ,EAAKgB,UAAUC,SAAQ,SAAAC,GAAQ,OAAIA,EAASd,MAAOU,EAAAV,OAC7C,IAAIe,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAAS,QAAK,OAAA,UAAA,OAAAN,EAAAQ,UAAAvB,MAAA,OAAA,KAJnDX,KAAKsB,MAAMa,OAAS,IAACrB,EAAAE,QAAA,MAAA,OAAAF,EAAAsB,cAAAzB,aAAA,QAAAG,EAAAE,OAAA,MAAA,QAO5BhB,KAAKyB,YAAa,EAAM,QAAA,UAAA,OAAAX,EAAAoB,UAAAzB,YAxBlB,OA0BT,SA1BS4B,GAAA,OAAAhC,EAAAiC,WAAAC,eAAArC,EA4BVsC,UAAA,SAAUV,cAER,OADA9B,KAAK4B,UAAUJ,IAAIM,GACZ,WACLW,EAAKb,iBAAiBE,GACtBW,EAAKnB,MAAQ,GACbmB,EAAKtB,eAAeuB,UAEvBxC,EAEDyC,UAAA,SAAUC,GACR5C,KAAKiB,OAAS2B,GAGhB1C,EACA2C,yBAAA,SAAyBxB,GACvBrB,KAAKmB,sBAAsBE,IAC5BtB,MCnDU+C,EAAYC,cAAY,CACnCC,QAAS,CACPC,KAAM,UAIGC,EAAaH,cAAY,CACpCC,QAAS,CACPC,KAAM,WCwBJE,EAAkE,CACtEC,KAAM,QACNC,MAAO,OACPC,GAAI,OACJC,KAAM,MA6BFC,EAA4C,SAApCC,aACZxE,aAAAA,WAAYyE,EAAG1E,EAAiBC,aAAYyE,EAAAC,EAAAF,EAC5CrE,aAAAA,WAAYuE,EAAG3E,EAAiBI,aAAYuE,EAAAC,EAAAH,EAC5CpE,MAAAA,WAAKuE,EAAG5E,EAAiBK,MAAKuE,EAAAC,EAAAJ,EAC9BnE,eAAAA,WAAcuE,EAAG7E,EAAiBM,eAAcuE,EAChDC,EAAIL,EAAJK,KACAC,EAAQN,EAARM,SAEAC,EAA8BC,cAC5B,SAACC,EAA0BC,GAAsB,OCzEtB,SAC7BD,EACAC,EACA/E,GAEA,OAAQ+E,EAAOC,MACb,IAAK,eACH,MAAO,GAAAC,OAAIH,GAAOC,EAAOG,UAASC,OAAOnF,GAE3C,IAAK,iBACH,OAAO8E,EAAMM,KAAI,SAAA9D,GACf,OAAIA,EAAS+D,KAAON,EAAOG,SACzBxE,EAAa+C,yBAAyBnC,EAASW,SAC/CqD,KAAYhE,GAAUiE,MAAM,KAEvBjE,KAEX,IAAK,kBACH,OAAOwD,EAAMU,QAAO,SAAAlE,GAAQ,OAAIA,EAAS+D,KAAON,EAAOG,WACzD,IAAK,YAIH,OAHAJ,EAAMrC,SAAQ,SAAAnB,GACZZ,EAAa+C,yBAAyBnC,EAASW,YAE1C,GACT,QACE,OAAO6C,GDiDPW,CAAgBX,EAAOC,EAAQ/E,KACjC,IAHK0F,EAASd,KAAEe,EAAQf,KAMpBgB,EAAaC,SAAOC,KAAKC,OAE/BC,aAAU,WAEUC,SAASC,iBAAiB,4BAC9BnD,OAAS,GACrBoD,QAAQC,KAAK,iDAIf1F,EAAa6C,WAAU,GACvB,IAAM8C,EAAc3F,EAAa0C,WAAU,SAAAkD,GACzCX,EAAS,CAAEX,KAAM,eAAgBE,QAASoB,OAG5C,OAAO,WACL5F,EAAa6C,WAAU,GACvB8C,IACAV,EAAS,CAAEX,KAAM,iBAElB,IAGH,IAAMuB,EAAcC,eAClB,SAACnB,GAAU,OAAK,SACdoB,EACAC,GAEe,cAAXA,IAEJf,EAAS,CAAEX,KAAM,iBAAkBE,QAASG,IAE5CxC,YAAW,WACT8C,EAAS,CAAEX,KAAM,kBAAmBE,QAASG,MAC5C,SAEL,IAGIsB,EAAoBC,WACxB,WAAA,OA9EyB,SAC3B1G,EACAL,GAEA,OAAQK,GACN,IAAK,QACH,OAAO,SAAC2G,GAAyD,OAC/DC,gBAACC,yBACKF,GACJG,UAAWjD,EAAmBlE,EAAaE,gBAGjD,IAAK,OACH,OAAOkH,OACT,IAAK,OACH,OAAOC,OACT,IAAK,OACH,OAAOC,OACT,QACE,OAAOJ,SA2DHK,CAAqBlH,EAAgBL,KAC3C,CAACK,EAAgBL,IAIbwH,EAAmCb,eACvC,SAACvE,EAASqF,YAAAA,IAAAA,EAAUnH,GAClB,IACM+E,EAA2B,CAC/BG,GAFSS,KAAKC,MAGdR,MAAM,EACNtD,QAAAA,EACA7B,SAAUkH,EAAQlH,SAClBC,SAAUiH,EAAQjH,SAClBC,iBAAkBgH,EAAQhH,kBAGxBN,IAAiB0F,EAAU3C,QAC7BwD,EAAYb,EAAU,GAAGL,GAAzBkB,GAGFZ,EAAS,CAAEX,KAAM,eAAgBE,QAAAA,MAEnC,CAAClF,EAAc0F,EAAWa,IAG5B,OACEO,gBAACvG,EAAgB6D,UAASZ,MAAO,CAAE6D,gBAAAA,IACjCP,gBAACS,iBAActH,MAAiB,SAAVA,EAAmByD,EAAYI,GACnDgD,gBAACU,cACCV,gDAC0BlB,EAAW6B,QACnCC,OAAKC,GACHC,SAAU,SAAOD,EAChB9H,EAAaC,UAAW,EAAC6H,EACzB9H,EAAaE,YAAa,EAAC4H,EAC5BE,OAAQ,KAAIF,EACZG,cAAe,OAAMH,IAGtBjC,EAAUN,KAAI,SAAC9D,EAAUyG,GAAK,IAAAC,EAAA,OAC7BlB,gBAACmB,GACCC,IAAK5G,EAAS+D,GACdE,KAAMjE,EAASiE,KACf4C,oBAAqBxB,EACrByB,iBAAkB9G,EAASjB,SAC3BgI,QAAS9B,EAAYjF,EAAS+D,IAC9BxF,aAAcA,EACdyI,IAAEN,GACAO,sBAAuB,CACrBX,SAAU,UAEZE,cAAe,OACfU,WAAY,wBAAsBR,EACjCnI,EAAaC,UAtIP,GAsIqBiI,EAC1B,mBAAEC,IAGNlB,gBAAC2B,SACCC,QAAQ,SACRL,QAAS9B,EAAYjF,EAAS+D,IAC9BjF,SAAUkB,EAASlB,SACnBkI,GAAI,CACFK,MAAO,QAETjE,MAAe,IAATA,OAAgBjE,EAAYiE,GAEjCpD,EAASW,gBAQrB0C,IAKMiE,EAAoDC,OAAKzE,yDJ7LK,CACzEJ,KAAM,QACNC,MAAO,OACPC,GAAI,OACJC,KAAM,oFMXwC,SAC9ClC,EACAqF,YAAAA,IAAAA,EAAUnH,GAEV,IAAM2I,EAAqC,CACzCzD,GAAIS,KAAKC,MACTR,MAAM,EACNtD,QAAAA,EACA7B,SAAUkH,EAAQlH,SAClBC,SAAUiH,EAAQjH,SAClBC,iBAAkBgH,EAAQhH,kBAG5BI,EAAaM,KAAK8H,wBCfO,WACzB,IAAMC,EAAUC,aAAWzI,GAC3B,IAAKwI,EACH,MAAM,IAAIE,MAAM,sDAElB,OAAOF"}